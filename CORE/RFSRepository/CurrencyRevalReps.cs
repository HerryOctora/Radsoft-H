using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using RFSModel;
using RFSUtility;
using System.Data.SqlClient;
using OfficeOpenXml;
using OfficeOpenXml.Style;
using System.IO;
using System.Drawing;



namespace RFSRepository
{
    public class CurrencyRevalReps
    {
        Host _host = new Host();

        public void GenerateCurrencyReval(CurrencyReval _CurrencyReval)
        {
            try
            {
                DateTime _dateTimeNow = DateTime.Now;
                using (SqlConnection DbCon = new SqlConnection(Tools.conString))
                {
                    DbCon.Open();
                    using (SqlCommand cmd = DbCon.CreateCommand())
                    {

                        cmd.CommandText = @"
                    
DECLARE @UnrealizedAccountUSDPK INT
DECLARE @UnrealizedAccountSGDPK INT
DECLARE @unrealizedAccountPK INT


SELECT @UnrealizedAccountSGDPK = UnrealizedAccountSGD -- UnrealisedSGD
 , @UnrealizedAccountUSDPK = UnrealizedAccountUSD FROM dbo.AccountingSetup
WHERE status = 2

DECLARE @Balance NUMERIC(22,4)
DECLARE @BalanceIDR NUMERIC(22,4)
DECLARE @AccountPK INT
DECLARE @CurrencyPK INT
DECLARE @CurrID NVARCHAR(5)

DECLARE @UnrealisedAmount NUMERIC(22,4)
DECLARE @DiffRateAmount NUMERIC(22,4)
DECLARE @RateAmount NUMERIC	(22,4)
DECLARE @Rate NUMERIC(22,4)
DECLARE @JournalAmount NUMERIC(22,4)


create table #ReferenceTemp
(Reference nvarchar(50))

Declare @JourHeader int  
set @JourHeader = 0    
Declare @JournalPK int 
Declare @PeriodPK int 
Declare @Reference nvarchar(50)    
Declare @AutoNo int 

Select @PeriodPK = PeriodPK From Period Where @Date BETWEEN DateFrom AND DateTo AND status = 2 


DECLARE A CURSOR FOR

SELECT B.AccountPK,C.CurrencyPK,D.ID,ISNULL(SUM(B.Debit-B.Credit),0), ISNULL(SUM(B.BaseDebit-B.BaseCredit),0) 
FROM Journal A
LEFT JOIN dbo.JournalDetail B ON A.JournalPK = B.JournalPK
LEFT JOIN dbo.Account C ON B.AccountPK = C.AccountPK AND C.status IN (1,2)
LEFT JOIN dbo.Currency D ON C.CurrencyPK = D.CurrencyPK AND D.status IN (1,2)
WHERE A.Status <> 3 AND A.Posted = 1 AND A.Reversed = 0 
AND A.ValueDate <= @Date AND C.CurrencyPK <> 1
GROUP BY B.AccountPK,C.CurrencyPK,D.ID

OPEN A 
FETCH NEXT FROM A
INTO	@AccountPK,@CurrencyPK,@CurrID,@Balance,@BalanceIDR
WHILE @@FETCH_STATUS = 0  
BEGIN 
	SET @Rate = 0
	SET @UnrealisedAmount = 0
	SET @DiffRateAmount = 0
	SET @RateAmount = 0
	SET @JournalAmount = 0
	SELECT @Rate = Rate FROM dbo.CurrencyRate WHERE CurrencyPK = @CurrencyPK AND
    Date = @Date AND status = 2

	IF @Rate > 0 AND @Balance > 0
	BEGIN
		SET @RateAmount = @Balance * @Rate
	END

	SET @unrealizedAccountPK = CASE WHEN @CurrID = 'USD' THEN @UnrealizedAccountUSDPK
	 WHEN @CurrID =  'SGD' THEN @UnrealizedAccountSGDPK end


	SELECT @UnrealisedAmount = SUM(B.BaseDebit-B.BaseCredit)  FROM dbo.Journal A
	LEFT JOIN dbo.JournalDetail B ON A.JournalPK = B.JournalPK 
	WHERE A.Status <> 3 AND A.Posted = 1 AND A.Reversed = 0
	AND A.ValueDate <= @Date AND B.AccountPK = @unrealizedAccountPK

	SET @DiffRateAmount = @BalanceIDR - @RateAmount
	SET @JournalAmount = (@UnrealisedAmount - @DiffRateAmount)

	SELECT @DiffRateAmount diffRateAmount,@BalanceIDR BalanceIDr, @RateAmount RateAmount,@UnrealisedAmount UnrealisedAmount
	IF(@JournalAmount > 0)
	BEGIN
		SET @JournalPK = 0
		SET	@AutoNo = 0
		SELECT 'Insert journal Unrealized C Account D'
		Select @JournalPK = isnull(Max(JournalPK),0) from Journal   

		insert into #ReferenceTemp (Reference)
		exec getJournalReference @Date,'ADJ',@Reference out 
	
        set @JournalPK = @JournalPK + 1             
		INSERT INTO [Journal]  
		([JournalPK],[HistoryPK],[Status],[Notes],[PeriodPK],[ValueDate]  
		,[TrxNo],[TrxName],[Reference],[Type],[Description],[Posted],[PostedBy]  
		,[PostedTime],[EntryUsersID],[EntryTime]  
		,[ApprovedUsersID],[ApprovedTime],[DBUserID],LastUpdate)     
		SELECT @JournalPK,1,2,'Generated By System',@PeriodPK, @Date
		,0,'',@Reference,5,'Currency Revaluation',1,@UsersID
		,@TimeNow,@UsersID,@TimeNow,@UsersID,@TimeNow,@UsersID,@TimeNow 
		  
        set @AutoNo = 1   
		INSERT INTO [JournalDetail]  
		([JournalPK],[AutoNo],[HistoryPK],[Status],[AccountPK],[CurrencyPK],[OfficePK]  
		,[DepartmentPK],[AgentPK],[CounterpartPK],[InstrumentPK],[ConsigneePK],[DetailDescription]  
		,[DocRef],[DebitCredit],[Amount],[Debit],[Credit],[CurrencyRate],[BaseDebit]  
		,[BaseCredit],[LastUsersID],LastUpdate) 
		Select @JournalPK,@AutoNo,1,2,@AccountPK,@CurrencyPK,1,0,0,0,0,0,'Currency Reval By System'
		,'','D',ABS(@JournalAmount),0,0,1,ABS(@JournalAmount),0,@UsersID,@TimeNow 

		set @AutoNo = 2   
		INSERT INTO [JournalDetail]  
		([JournalPK],[AutoNo],[HistoryPK],[Status],[AccountPK],[CurrencyPK],[OfficePK]  
		,[DepartmentPK],[AgentPK],[CounterpartPK],[InstrumentPK],[ConsigneePK],[DetailDescription]  
		,[DocRef],[DebitCredit],[Amount],[Debit],[Credit],[CurrencyRate],[BaseDebit]  
		,[BaseCredit],[LastUsersID],LastUpdate) 
		Select @JournalPK,@AutoNo,1,2,@unrealizedAccountPK,1,1,0,0,0,0,0,'Currency Reval By System'
		,'','C',ABS(@JournalAmount),0,ABS(@JournalAmount),1,0,ABS(@JournalAmount),@UsersID,@TimeNow 
	END
	
	IF(@JournalAmount < 0)
	BEGIN
		SELECT 'Insert journal Unrealized D Account C'
		SET @JournalPK = 0
		SET	@AutoNo = 0

		Select @JournalPK = isnull(Max(JournalPK),0) from Journal   

		insert into #ReferenceTemp (Reference)
		exec getJournalReference @Date,'ADJ',@Reference out 
	
        set @JournalPK = @JournalPK + 1             
		INSERT INTO [Journal]  
		([JournalPK],[HistoryPK],[Status],[Notes],[PeriodPK],[ValueDate]  
		,[TrxNo],[TrxName],[Reference],[Type],[Description],[Posted],[PostedBy]  
		,[PostedTime],[EntryUsersID],[EntryTime]  
		,[ApprovedUsersID],[ApprovedTime],[DBUserID],LastUpdate)     
		SELECT @JournalPK,1,2,'Generated By System',@PeriodPK, @Date
		,0,'',@Reference,5,'Currency Revaluation',1,@UsersID
		,@TimeNow,@UsersID,@TimeNow,@UsersID,@TimeNow,@UsersID,@TimeNow 
		  
        set @AutoNo = 1   
		INSERT INTO [JournalDetail]  
		([JournalPK],[AutoNo],[HistoryPK],[Status],[AccountPK],[CurrencyPK],[OfficePK]  
		,[DepartmentPK],[AgentPK],[CounterpartPK],[InstrumentPK],[ConsigneePK],[DetailDescription]  
		,[DocRef],[DebitCredit],[Amount],[Debit],[Credit],[CurrencyRate],[BaseDebit]  
		,[BaseCredit],[LastUsersID],LastUpdate) 
		Select @JournalPK,@AutoNo,1,2,@unrealizedAccountPK,@CurrencyPK,1,0,0,0,0,0,'Currency Reval By System'
		,'','D',ABS(@JournalAmount),0,0,1,ABS(@JournalAmount),0,@UsersID,@TimeNow 
		
		set @AutoNo = 2   
		INSERT INTO [JournalDetail]  
		([JournalPK],[AutoNo],[HistoryPK],[Status],[AccountPK],[CurrencyPK],[OfficePK]  
		,[DepartmentPK],[AgentPK],[CounterpartPK],[InstrumentPK],[ConsigneePK],[DetailDescription]  
		,[DocRef],[DebitCredit],[Amount],[Debit],[Credit],[CurrencyRate],[BaseDebit]  
		,[BaseCredit],[LastUsersID],LastUpdate) 
		Select @JournalPK,@AutoNo,1,2,@AccountPK,1,1,0,0,0,0,0,'Currency Reval By System'
		,'','C',ABS(@JournalAmount),0,ABS(@JournalAmount),1,0,ABS(@JournalAmount),@UsersID,@TimeNow 
	END

	FETCH NEXT FROM A 
	INTO @AccountPK,@CurrencyPK,@CurrID,@Balance,@BalanceIDR
END
CLOSE A
DEALLOCATE A


";

                        cmd.CommandTimeout = 0;
                        cmd.Parameters.AddWithValue("@Date", _CurrencyReval.ValueDate);
                        cmd.Parameters.AddWithValue("@UsersID", _CurrencyReval.UsersID);
                        cmd.Parameters.AddWithValue("@TimeNow", _dateTimeNow);
                        cmd.ExecuteNonQuery();
                    }
                }
            }
            catch (Exception err)
            {
                throw err;
            }

        }


        public string Void_CurencyReval(DateTime _date, string _usersID)
        {
            try
            {
                DateTime _dateTimeNow = DateTime.Now;
                using (SqlConnection DbCon = new SqlConnection(Tools.conString))
                {
                    DbCon.Open();
                    using (SqlCommand cmd = DbCon.CreateCommand())
                    {

                        cmd.CommandText = @"


                        update A set status = 3 from JournalDetail A
                        left join Journal B on A.JournalPK = B.JournalPK and B.status = 2 and B.Posted = 1 and B.Reversed = 0
                        where B.ValueDate = @Date and B.Description = 'Currency Revaluation'

                        update Journal set posted = 0, status = 3, VoidUsersID = @UsersID,VoidTime = @TimeNow,LastUpdate=@TimeNow
                        where status = 2 and Posted = 1 and Reversed = 0 and ValueDate = @Date and Description = 'Currency Revaluation'

                        SELECT 'Void Currency Revaluation Success !' as Result

                        ";

                        cmd.Parameters.AddWithValue("@Date", _date);
                        cmd.Parameters.AddWithValue("@UsersID", _usersID);
                        cmd.Parameters.AddWithValue("@TimeNow", _dateTimeNow);

                        using (SqlDataReader dr = cmd.ExecuteReader())
                        {
                            if (dr.HasRows)
                            {
                                dr.Read();
                                return Convert.ToString(dr["Result"]);

                            }
                            return "";
                        }
                    }
                }
            }
            catch (Exception err)
            {
                throw err;
            }

        }
    }
}